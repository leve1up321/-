// Language and Currency System
const languages = {
    ar: {
        // Navigation
        home: "ุงูุฑุฆูุณูุฉ",
        products: "ุงูููุชุฌุงุช",
        reviews: "ุงูุชููููุงุช",
        contact: "ุงุชุตู ุจูุง",
        
        // Hero Section
        heroTitle: "ูุชุฌุฑ ููู ุงุจ",
        heroSubtitle: "๐ก ุงุจุฏุฃ ูู ุงูุตูุฑ ูุงุจูู ุฃูู ุฏุฎู ุฑููู ูู ุงูููู!",
        heroDescription: "ุงูุชุดู ููู ุชุญููู ููุงุฑุงุชู ุฃู ููุชู ุฅูู ูุตุฏุฑ ุฏุฎู ูุณุชูุฑ ูู ุฎูุงู ุจูุน ููุชุฌุงุช ุฑูููุฉ ุจุณูุทุฉ ุชุญูู ูู ุฃุฑุจุงุญูุง ุญุชู ุฃุซูุงุก ูููู ๐ด๐ฐ",
        startJourney: "ุงุจุฏุฃ ุฑุญูุชู ุงูุขู",
        shopNow: "ุชุณูู ุงูุขู",
        
        // Products
        ourProducts: "ููุชุฌุงุชูุง",
        productsSubtitle: "ุงูุชุดู ูุฌููุนุชูุง ุงููููุฒุฉ ูู ุงูููุชุฌุงุช ุงูุฑูููุฉ",
        addToCart: "ุฅุถุงูุฉ ููุณูุฉ",
        viewDetails: "ุนุฑุถ ุงูุชูุงุตูู",
        
        // Cart
        cart: "ุณูุฉ ุงูุชุณูู",
        emptyCart: "ุงูุณูุฉ ูุงุฑุบุฉ",
        total: "ุงููุฌููุน",
        checkout: "ุฅุชูุงู ุงูุดุฑุงุก",
        
        // Footer
        footerTitle: "ูุชุฌุฑ ููู ุงุจ",
        footerDescription: "ูุฌูุชู ูุจูุงุก ูุดุฑูุนู ุงูุฑููู",
        footerSubDescription: "๐ก ุงุจุฏุฃ ูู ุงูุตูุฑ ูุงุจูู ุฃูู ุฏุฎู ุฑููู ูู ุงูููู",
        quickLinks: "ุฑูุงุจุท ุณุฑูุนุฉ",
        contactUs: "ุชูุงุตู ูุนูุง",
        allRightsReserved: "ุฌููุน ุงูุญููู ูุญููุธุฉ",
        
        // Messages
        addedToCart: "ุชู ุฅุถุงูุฉ ุงูููุชุฌ ุฅูู ุงูุณูุฉ",
        removedFromCart: "ุชู ุญุฐู ุงูููุชุฌ ูู ุงูุณูุฉ",
        checkoutSuccess: "ุดูุฑุงู ูู! ุชู ุฅุชูุงู ุงูุทูุจ ุจูุฌุงุญ.",
        checkoutProcessing: "ุณูุชู ุชูุฌููู ูุตูุญุฉ ุงูุฏูุน...",
        emptyCartError: "ุงูุณูุฉ ูุงุฑุบุฉ!",
        
        // Product Details
        backToHome: "ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ",
        productDescription: "ูุตู ุงูููุชุฌ"
        ,
        
        // FAQ Section
        faqTitle: "ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ",
        faqSubtitle: "ุฅุฌุงุจุงุช ุนูู ุฃูู ุงูุฃุณุฆูุฉ ุงูุชู ูุฏ ุชุฎุทุฑ ุจุจุงูู"
    },
    en: {
        // Navigation
        home: "Home",
        products: "Products",
        reviews: "Reviews",
        contact: "Contact",
        
        // Hero Section
        heroTitle: "Level Up Store",
        heroSubtitle: "๐ก Start from scratch and build your first digital income today!",
        heroDescription: "Discover how to turn your skills or time into a continuous income source by selling simple digital products that generate profits even while you sleep ๐ด๐ฐ",
        startJourney: "Start Your Journey Now",
        shopNow: "Shop Now",
        
        // Products
        ourProducts: "Our Products",
        productsSubtitle: "Discover our premium collection of digital products",
        addToCart: "Add to Cart",
        viewDetails: "View Details",
        
        // Cart
        cart: "Shopping Cart",
        emptyCart: "Cart is empty",
        total: "Total",
        checkout: "Checkout",
        
        // Footer
        footerTitle: "Level Up Store",
        footerDescription: "Your destination for building your digital business",
        footerSubDescription: "๐ก Start from scratch and build your first digital income today",
        quickLinks: "Quick Links",
        contactUs: "Contact Us",
        allRightsReserved: "All rights reserved",
        
        // Messages
        addedToCart: "Product added to cart",
        removedFromCart: "Product removed from cart",
        checkoutSuccess: "Thank you! Order completed successfully.",
        checkoutProcessing: "Redirecting to payment page...",
        emptyCartError: "Cart is empty!",
        
        // Product Details
        backToHome: "Back to Home",
        productDescription: "Product Description"
        ,
        
        // FAQ Section
        faqTitle: "Frequently Asked Questions",
        faqSubtitle: "Answers to the most important questions you might have"
    }
};

const currencies = {
    SAR: { symbol: "ุฑูุงู", rate: 1, name: "ุงูุฑูุงู ุงูุณุนูุฏู" },
    USD: { symbol: "$", rate: 0.27, name: "US Dollar" },
    EUR: { symbol: "โฌ", rate: 0.25, name: "Euro" },
    AED: { symbol: "ุฏุฑูู", rate: 1, name: "ุงูุฏุฑูู ุงูุฅูุงุฑุงุชู" },
    EGP: { symbol: "ุฌููู", rate: 8.4, name: "ุงูุฌููู ุงููุตุฑู" }
};

// Current settings
let currentLanguage = localStorage.getItem('levelup-language') || 'ar';
let currentCurrency = localStorage.getItem('levelup-currency') || 'SAR';

// Sample products data
const products = [
    {
        id: 1,
        title: "15 ููุฑุฉ ูุดุฑูุน ุฑููู ูุฑุจุญ",
        shortDescription: "ุฏูููู ุงูุนููู ูุจุฏุก ูุดุฑูุนู ุงูุฑููู ูู ุงูุตูุฑ ูุจูุงุก ูุตุฏุฑ ุฏุฎู ุญูููู ูู ุงูุฅูุชุฑูุช ูุน ุฃูุซุฑ ูู 15 ููุฑุฉ ุฌุงูุฒุฉ ููุชูููุฐ.",
        description: "ูู ููุฑุช ููููุง ุชุจุฏุฃ ูุดุฑูุนู ุงูุฑูููุ ููู ูุง ุนุฑูุช ูู ููู ุชุจุฏุฃุ ูุฐุง ุงููุชุงุจ ูู ุฏูููู ุงูุนููู ูุชุจุฏุฃ ูู ุงูุตูุฑ ูุชุจูู ูุตุฏุฑ ุฏุฎู ุญูููู ูู ุงูุฅูุชุฑูุช.",
        fullDescription: `
            <h3>๐ ุนู ุงููุชุงุจ</h3>
            <p>ููุฏูู ูู ูุฐุง ุงููุชุงุจ ุฃูุซุฑ ูู 15 ููุฑุฉ ูุดุฑูุน ุฑููู ุฌุงูุฒุฉ ููุชูููุฐุ ุชูุฏุฑ ุชุจุฏุฃูุง ูู ุจูุชู ูุจุฏูู ุฑุฃุณ ูุงู ูุจูุฑุ ูุน ุดุฑุญ ูุงูู ููู ููุฑุฉ ุฎุทูุฉ ุจุฎุทูุฉ.</p>
            
            <h3>๐ ูุง ุณุชุชุนููู ุฏุงุฎู ุงููุชุงุจ:</h3>
            <ul>
                <li>ููู ุชุฎุชุงุฑ ุงูููุฑุฉ ุงูููุงุณุจุฉ ููุฏุฑุงุชู ูููุงุฑุงุชู</li>
                <li>ุฃุฏูุงุช ุจุณูุทุฉ ูุจุฏุก ูุดุฑูุนู ุฎูุงู ููู ูุงุญุฏ ููุท</li>
                <li>ุฃููุงุฑ ูุดุงุฑูุน ุฑูููุฉ ูุฌุฑูุจุฉ ุชุญูู ุฃุฑุจุงุญูุง ุญููููุฉ</li>
                <li>ุฎุทุฉ ุนูููุฉ ูุชูุณูุน ุฏุฎูู ูุชุทููุฑ ุนููู ุฃูููุงูู</li>
                <li>ุฃุณุฑุงุฑ ุงููุฌุงุญ ูู ุงูุชุณููู ุนุจุฑ TikTok ูInstagram ูYouTube</li>
            </ul>
            
            <h3>๐ก ุฃูุซูุฉ ูู ุงููุดุงุฑูุน ุฏุงุฎู ุงููุชุงุจ:</h3>
            <ul>
                <li>ุฅูุดุงุก ููุงุฉ YouTube ูุงุฌุญุฉ</li>
                <li>ุจูุน ุงูููุชุฌุงุช ุงูุฑูููุฉ</li>
                <li>ุงูุชุณููู ุจุงูุนูููุฉ</li>
                <li>ุฅูุดุงุก ูุชุฌุฑ ุฅููุชุฑููู ุตุบูุฑ</li>
                <li>ุชูุฏูู ุฎุฏูุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู</li>
            </ul>
            
            <h3>๐ฆ ูุง ุณุชุญุตู ุนููู:</h3>
            <ul>
                <li>ูุชุงุจ ุฑููู ุจุตูุบุฉ PDF ุชูุงุนูู ุฌุงูุฒ ููุชุญููู ุงูููุฑู</li>
                <li>ุชุตููู ุนุตุฑู ูุฑูุญ ูููุฑุงุกุฉ</li>
                <li>ูุญุชูู ุชุทุจููู ูููุณ ูุธุฑู</li>
            </ul>
        `,
        price: 57,
        image: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=300&h=300&fit=crop&crop=center",
        category: "ูุชุจ ุฑูููุฉ",
        features: ["PDF ุชูุงุนูู", "ุชุญููู ููุฑู", "15+ ููุฑุฉ ูุดุฑูุน", "ุฎุทุฉ ุนูููุฉ"],
        pages: "25 ุตูุญุฉ",
        readingTime: "30 ุฏูููุฉ"
    },
    {
        id: 2,
        title: "ุงูุฑุจุญ ูู ุงูููุชุฌุงุช ุงูุฑูููุฉ",
        shortDescription: "ุงูุฎุทุฉ ุงููุงููุฉ ุฎุทูุฉ ุจุฎุทูุฉ ูุชุจุฏุฃ ูุดุฑูุนู ุงูุฑููู ุงูุฃูู ูุชุจูู ุฏุฎู ุญูููู ูู ุงูุฅูุชุฑูุช.",
        description: "ุชุชุนุจ ุจุงูุดุบู ูู ูููโฆ ููู ุฏุงูู ุชุณุฃู ููุณู: ููุด ุบูุฑู ูุฑุจุญ ูู ุงูุฅูุชุฑูุช ูุฃูุง ูุฃุ ๐ญ ุงูุฌูุงุจ ุจุณูุท: ูุฃููู ุนุฑููุง ููู ูุญูููู ููุงุฑุงุชูู ุฅูู ููุชุฌุงุช ุฑูููุฉ ุชุจูุน ุนููู ุญุชู ููู ูุงูููู ๐ด๐ฐ",
        fullDescription: `
            <h3>๐ ููุงุฐุง ูุฐุง ุงููุชุงุจุ</h3>
            <p>ูุงูุขูุ ูุฐุง ุงููุชุงุจ ุจูุนุทูู ุงูุฎุทุฉ ุงููุงููุฉ ุฎุทูุฉ ุจุฎุทูุฉ ูุชุจุฏุฃ ูุดุฑูุนู ุงูุฑููู ุงูุฃูู ูุชุจูู ุฏุฎู ุญูููู ูู ุงูุฅูุชุฑูุช</p>
            
            <h3>๐ ูุง ุงูุฐู ุณุชุชุนููู:</h3>
            <ul>
                <li>ูุง ูู ุงูููุชุฌุงุช ุงูุฑูููุฉ ูููุงุฐุง ุชุนุชุจุฑ ุฃุณุฑุน ูุฃุฐูู ุทุฑููุฉ ูุจูุงุก ุฏุฎู ูุณุชูุฑ</li>
                <li>ุฃููุงุน ุงูููุชุฌุงุช ุงูุฑูููุฉ ุงูุฃูุซุฑ ูุจูุนูุง (ูุชุจุ ููุฑุณุงุชุ ููุงูุจุ ุฃุฏูุงุช ูููุชุงุฌ)</li>
                <li>ููู ุชุฎุชุงุฑ ููุฑุฉ ููุชุฌ ุชุถูู ูู ุงููุจูุนุงุช ูุชูุงุณุจ ููุงุฑุงุชู</li>
                <li>ุงูุฃุฏูุงุช ูุงูููุตุงุช ุงูุชู ูุญุชุงุฌูุง ุฃู ุดุฎุต ููุงูุทูุงู ููุฑูุง</li>
                <li>ุทุฑููุฉ ุฅูุดุงุก ูุชุฌุฑู ุงูุฑููู ูุจุฏุก ุงูุจูุน ุฎูุงู ููู ูุงุญุฏ ููุท</li>
                <li>ุฃุณุงููุจ ุงูุชุณููู ุงูุญุฏูุซุฉ ุนุจุฑ TikTok ูInstagram ูSEO</li>
                <li>ุฃุณุฑุงุฑ ุจูุงุก ุฏุฎู ุณูุจู ูุฌูุจ ูู ุงููุงู ุญุชู ุฃุซูุงุก ูููู!</li>
            </ul>
            
            <h3>๐ ูููุฒุงุช ุงููุชุงุจ:</h3>
            <ul>
                <li>ุณูู ููุงุถุญ</li>
                <li>ูุฎุชุตุฑ ููุนูุงู</li>
                <li>ุจุตูุบุฉ PDF</li>
                <li>ุชุตููู ุงุญุชุฑุงูู</li>
                <li>ูุจูู ุนูู ุฎุจุฑุฉ ุญููููุฉ</li>
            </ul>
        `,
        price: 39,
        image: "https://images.unsplash.com/photo-1554224155-6726b3ff858f?w=300&h=300&fit=crop&crop=center",
        category: "ูุชุจ ุฑูููุฉ",
        features: ["PDF ุงุญุชุฑุงูู", "ุชุญููู ููุฑู", "ุฎุจุฑุฉ ุญููููุฉ", "ุฏุฎู ุณูุจู"],
        pages: "10 ุตูุญุงุช",
        readingTime: "20 ุฏูููุฉ"
    },
    {
        id: 3,
        title: "ุงูุฏููู ุงูุชูููุฏู ููุฑุจุญ ูู ุงูููุชุฌุงุช ุงูุฑูููุฉ",
        shortDescription: "ุฏููู ุชูููุฏู ุจุณูุท ูุณุงุนุฏู ุชููู ุงูุฎุทูุงุช ุงูุฃุณุงุณูุฉ ูุจูุงุก ููุชุฌ ุฑููู ูุงุฌุญ - ูุซุงูู ูููุจุชุฏุฆูู.",
        description: "ูู ููุฑุช ููููุง ููุด ุบูุฑู ูุฑุจุญ ูู ุงูุฅูุชุฑูุช ุจุณูููุฉ ุจูููุง ุฃูุช ูุง ุฒูุช ูุญุชุงุฑ ูู ุฃูู ุชุจุฏุฃุ ูุฐุง ุงูุฏููู ุงูุชูููุฏู ุจูุณุงุนุฏู ุชููู ุงูุฎุทูุงุช ุงูุฃุณุงุณูุฉ ูุจูุงุก ููุชุฌ ุฑููู ูุงุฌุญ ูุจูุน ุญุชู ูุฃูุช ูุงูู ๐ด๐ฐ",
        fullDescription: `
            <h3>๐ ูุง ุณุชุชุนููู ูู ูุฐุง ุงูุฏููู:</h3>
            <ul>
                <li>ููู ุชุฎุชุงุฑ ููุฑุฉ ููุชุฌ ุฑููู ูุฑุจุญุฉ</li>
                <li>ุงูุฃุณุงุณูุงุช ุงููู ูุงุฒู ุชุจูู ุนูููุง ูุชุฌุฑู ุฃู ุตูุญุชู</li>
                <li>ููู ุชุณููู ุตุญ ุจุฏูู ูุง ุชุถูุน ููุชู ููุงูู</li>
            </ul>
            
            <h3>๐ก ููุงุญุธุฉ ูููุฉ:</h3>
            <p>ูุฐุง ุงููุชุงุจ ูู ููุฏูุฉ ุจุณูุทุฉ ูู ุงููุชุงุจ ุงููุงูู "ุฎุทุฉ ุจูุงุก ูุดุฑูุนู ุงูุฑููู ูู ุงูุตูุฑ"ุ ุงููู ููู ุฑูุงุจุท ูุจุงุดุฑุฉ ูุฃุฏูุงุชุ ูููุงูุน ุนูููุฉ ุชุณุงุนุฏู ุชุจุฏุฃ ููุฑูุง ๐</p>
            
            <h3>๐ฏ ููู ูุฐุง ุงููุชุงุจุ</h3>
            <p>ูุซุงูู ูููุจุชุฏุฆูู ุงููู ูุจูู ูููููู ุงูุฃุณุงุณูุงุช ูุจู ูุง ูุณุชุซูุฑูู ูู ุงููุชุจ ุงูุฃูุจุฑ.</p>
            
            <h3>๐ฐ ุงุณุชุซูุงุฑ ุจุณูุท:</h3>
            <p>ุงุณุชุซูุฑ ูค ุฑูุงู ููุท ูุฎุฐ ุฃูู ุฎุทูุฉ ูู ุทุฑููู ููุฑุจุญ ูู ุงูุฅูุชุฑูุช ๐ก</p>
        `,
        price: 4,
        image: "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?w=300&h=300&fit=crop&crop=center",
        category: "ูุชุจ ุฑูููุฉ",
        features: ["ุฏููู ูููุจุชุฏุฆูู", "ุฃุณุงุณูุงุช ูููุฉ", "ุณุนุฑ ููุงุณุจ", "ุฎุทูุฉ ุฃููู"],
        pages: "5 ุตูุญุงุช",
        readingTime: "10 ุฏูุงุฆู"
    }
];

// Enhanced Cart functionality with better localStorage management
let cart = [];

// Load cart from localStorage
function loadCart() {
    try {
        const savedCart = localStorage.getItem('levelup-cart');
        cart = savedCart ? JSON.parse(savedCart) : [];
    } catch (error) {
        console.error('Error loading cart:', error);
        cart = [];
    }
}

// Save cart to localStorage
function saveCart() {
    try {
        localStorage.setItem('levelup-cart', JSON.stringify(cart));
        localStorage.setItem('levelup-cart-timestamp', Date.now().toString());
    } catch (error) {
        console.error('Error saving cart:', error);
    }
}

// Language and Currency functions
function changeLanguage(lang) {
    currentLanguage = lang;
    localStorage.setItem('levelup-language', lang);
    updatePageLanguage();
    updateCartModal();
    loadProducts();
}

function changeCurrency(currency) {
    currentCurrency = currency;
    localStorage.setItem('levelup-currency', currency);
    updateCartUI();
    updateCartModal();
    loadProducts();
}

function formatPrice(price) {
    const currency = currencies[currentCurrency];
    const convertedPrice = (price * currency.rate).toFixed(2);
    return `${convertedPrice} ${currency.symbol}`;
}

function getText(key) {
    return languages[currentLanguage][key] || key;
}

function updatePageLanguage() {
    // Update HTML direction
    document.documentElement.dir = currentLanguage === 'ar' ? 'rtl' : 'ltr';
    document.documentElement.lang = currentLanguage;
    
    // Update navigation
    const navLinks = document.querySelectorAll('.nav-menu a, .mobile-menu a');
    navLinks.forEach(link => {
        const href = link.getAttribute('href');
        if (href === '#home') link.textContent = getText('home');
        else if (href === '#products') link.textContent = getText('products');
        else if (href === '#reviews') link.textContent = getText('reviews');
        else if (href === '#contact') link.textContent = getText('contact');
        else if (href === '#faq') link.textContent = getText('faqTitle');
    });
    
    // Update hero section
    const heroTitle = document.querySelector('.hero-title .gradient-text');
    if (heroTitle) heroTitle.textContent = getText('heroTitle');
    
    const heroSubtitle = document.querySelector('.hero-subtitle');
    if (heroSubtitle) heroSubtitle.textContent = getText('heroSubtitle');
    
    const heroDescription = document.querySelector('.hero-description');
    if (heroDescription) heroDescription.textContent = getText('heroDescription');
    
    const heroButtons = document.querySelectorAll('.hero-buttons .btn');
    if (heroButtons[0]) heroButtons[0].textContent = getText('startJourney');
    if (heroButtons[1]) heroButtons[1].textContent = getText('shopNow');
    
    // Update products section
    const productsTitle = document.querySelector('#products .section-title');
    if (productsTitle) productsTitle.textContent = getText('ourProducts');
    
    const productsSubtitle = document.querySelector('#products .section-subtitle');
    if (productsSubtitle) productsSubtitle.textContent = getText('productsSubtitle');
    
    // Update cart modal
    const cartTitle = document.querySelector('.cart-header h3');
    if (cartTitle) cartTitle.textContent = getText('cart');
    
    const checkoutBtn = document.querySelector('.checkout-btn');
    
    // Update FAQ section
    const faqTitle = document.querySelector('#faq .section-title');
    if (faqTitle) faqTitle.textContent = getText('faqTitle');
    
    const faqSubtitle = document.querySelector('#faq .section-subtitle');
    if (faqSubtitle) faqSubtitle.textContent = getText('faqSubtitle');
    if (checkoutBtn) checkoutBtn.textContent = getText('checkout');
}

// DOM elements
const cartModal = document.getElementById('cartModal');
const cartItems = document.getElementById('cartItems');
const cartTotal = document.getElementById('cartTotal');
const cartCount = document.getElementById('cartCount');
const mobileCartCount = document.getElementById('mobileCartCount');
const productsGrid = document.getElementById('productsGrid');
const mobileMenu = document.getElementById('mobileMenu');
const loadingScreen = document.getElementById('loadingScreen');

// Initialize the website
document.addEventListener('DOMContentLoaded', function() {
    // Show loading screen
    showLoadingScreen();
    
    // Load saved settings and cart
    loadCart();
    updatePageLanguage();
    updateDropdownDisplays();
    
    // Load products after a short delay to simulate loading
    setTimeout(() => {
        loadProducts();
        updateCartUI();
        hideLoadingScreen();
        
        // Add scroll animations
        addScrollAnimations();
        
        // Add typing effect to hero title
        addTypingEffect();
    }, 2000);
    
    // Add smooth scrolling for navigation links
    addSmoothScrolling();
    
    // Add navbar scroll effect
    addNavbarScrollEffect();
    
    // Add parallax effect
    addParallaxEffect();
});

// Loading screen functions
function showLoadingScreen() {
    loadingScreen.style.display = 'flex';
}

function hideLoadingScreen() {
    loadingScreen.style.opacity = '0';
    setTimeout(() => {
        loadingScreen.style.display = 'none';
    }, 500);
}

// Load products into the grid
function loadProducts() {
    productsGrid.innerHTML = '';
    
    products.forEach(product => {
        const productCard = createProductCard(product);
        productsGrid.appendChild(productCard);
    });
}

// Create product card element
function createProductCard(product) {
    const card = document.createElement('div');
    card.className = 'product-card';
    
    // Check if image is URL or emoji
    const isImageUrl = product.image.startsWith('http');
    const imageContent = isImageUrl 
        ? `<img src="${product.image}" alt="${product.title}" style="width: 100%; height: 200px; object-fit: cover; border-radius: 8px;">`
        : `<div style="font-size: 4rem; text-align: center; padding: 2rem;">${product.image}</div>`;
    
    card.innerHTML = `
        <div class="product-image">
            ${imageContent}
        </div>
        <div class="product-content">
            <h3 class="product-title">${product.title}</h3>
            <p class="product-description">${product.shortDescription || product.description}</p>
            <div class="product-price">${formatPrice(product.price)}</div>
            <div class="product-actions">
                <button class="btn btn-primary btn-small" onclick="addToCart(${product.id})">
                    ${getText('addToCart')}
                </button>
                <button class="btn btn-secondary btn-small" onclick="viewProduct(${product.id})">
                    ${getText('viewDetails')}
                </button>
            </div>
        </div>
    `;
    return card;
}

// Add product to cart
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (!product) return;
    
    const existingItem = cart.find(item => item.id === productId);
    
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        cart.push({
            ...product,
            quantity: 1
        });
    }
    
    saveCart();
    updateCartUI();
    showNotification(`${getText('addedToCart')}: "${product.title}"`);
}

// Remove product from cart
function removeFromCart(productId) {
    cart = cart.filter(item => item.id !== productId);
    saveCart();
    updateCartUI();
    updateCartModal();
}

// Save cart to localStorage
function saveCart() {
    localStorage.setItem('levelup-cart', JSON.stringify(cart));
}

// Update cart UI
function updateCartUI() {
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    
    cartCount.textContent = totalItems;
    mobileCartCount.textContent = totalItems;
    cartTotal.textContent = formatPrice(totalPrice);
    
    // Show/hide cart count badges
    if (totalItems > 0) {
        cartCount.style.display = 'flex';
        mobileCartCount.style.display = 'flex';
    } else {
        cartCount.style.display = 'none';
        mobileCartCount.style.display = 'none';
    }
}

// Toggle cart modal
function toggleCart() {
    cartModal.classList.toggle('active');
    updateCartModal();
}

// Update cart modal content
function updateCartModal() {
    if (cart.length === 0) {
        cartItems.innerHTML = `<p class="empty-cart">${getText('emptyCart')}</p>`;
        return;
    }
    
    cartItems.innerHTML = '';
    
    cart.forEach(item => {
        const cartItem = document.createElement('div');
        cartItem.className = 'cart-item';
        cartItem.innerHTML = `
            <div class="cart-item-info">
                <h4>${item.title}</h4>
                <div class="cart-item-price">${formatPrice(item.price)} ร ${item.quantity}</div>
            </div>
            <button class="remove-item" onclick="removeFromCart(${item.id})">
                <i class="fas fa-trash"></i>
            </button>
        `;
        cartItems.appendChild(cartItem);
    });
}

// View product details
function viewProduct(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        showProductPage(product);
    }
}

// Show product detail page
function showProductPage(product) {
    // Hide main content
    document.getElementById('hero').style.display = 'none';
    document.getElementById('products').style.display = 'none';
    document.getElementById('reviews').style.display = 'none';
    document.getElementById('contact').style.display = 'none';
    
    // Create product page content
    const productPageHTML = `
        <section id="product-detail" class="product-detail-section">
            <div class="container">
                <div class="product-detail-nav">
                    <button class="btn btn-secondary" onclick="goBackToHome()">
                        <i class="fas fa-arrow-right"></i> ${getText('backToHome')}
                    </button>
                </div>
                
                <div class="product-detail-content">
                    <div class="product-detail-image">
                        ${product.image.startsWith('http') 
                            ? `<img src="${product.image}" alt="${product.title}">`
                            : `<div class="product-emoji">${product.image}</div>`
                        }
                    </div>
                    
                    <div class="product-detail-info">
                        <div class="product-category">${product.category}</div>
                        <h1 class="product-detail-title">${product.title}</h1>
                        <div class="product-detail-price">${formatPrice(product.price)}</div>
                        
                        <div class="product-features">
                            ${product.features ? product.features.map(feature => 
                                `<span class="feature-tag">${feature}</span>`
                            ).join('') : ''}
                        </div>
                        
                        <div class="product-meta">
                            ${product.pages ? `<div class="meta-item"><i class="fas fa-file-alt"></i> ${product.pages}</div>` : ''}
                            ${product.readingTime ? `<div class="meta-item"><i class="fas fa-clock"></i> ${product.readingTime}</div>` : ''}
                        </div>
                        
                        <div class="product-actions-detail">
                            <button class="btn btn-primary btn-large" onclick="addToCart(${product.id})">
                                <i class="fas fa-cart-plus"></i> ${getText('addToCart')}
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="product-description-full">
                    <h2>${getText('productDescription')}</h2>
                    <div class="description-content">
                        ${product.fullDescription || product.description}
                    </div>
                </div>
            </div>
        </section>
    `;
    
    // Add product page to body
    const existingProductPage = document.getElementById('product-detail');
    if (existingProductPage) {
        existingProductPage.remove();
    }
    
    document.body.insertAdjacentHTML('beforeend', productPageHTML);
    
    // Scroll to top
    window.scrollTo(0, 0);
}

// Go back to home page
function goBackToHome() {
    // Remove product detail page
    const productPage = document.getElementById('product-detail');
    if (productPage) {
        productPage.remove();
    }
    
    // Show main content
    document.getElementById('hero').style.display = 'block';
    document.getElementById('faq').style.display = 'block';
    document.getElementById('products').style.display = 'block';
    document.getElementById('reviews').style.display = 'block';
    document.getElementById('contact').style.display = 'block';
    
    // Scroll to top
    window.scrollTo(0, 0);
}

// Checkout function
function checkout() {
    if (cart.length === 0) {
        showNotification(getText('emptyCartError'), 'error');
        return;
    }
    
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    showNotification(`${getText('total')}: ${formatPrice(total)}. ${getText('checkoutProcessing')}`);
    
    // Here you would typically redirect to a payment gateway
    setTimeout(() => {
        cart = [];
        saveCart();
        updateCartUI();
        toggleCart();
        showNotification(getText('checkoutSuccess'), 'success');
    }, 2000);
}

// Mobile menu functions
function toggleMobileMenu() {
    mobileMenu.classList.toggle('active');
    
    // Animate hamburger lines
    const btn = document.querySelector('.mobile-menu-btn');
    btn.classList.toggle('active');
}

function closeMobileMenu() {
    mobileMenu.classList.remove('active');
    document.querySelector('.mobile-menu-btn').classList.remove('active');
}

// Show notification
function showNotification(message, type = 'info') {
    // Create notification element
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <span>${message}</span>
            <button onclick="this.parentElement.parentElement.remove()">&times;</button>
        </div>
    `;
    
    // Add styles
    notification.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        padding: 1rem;
        box-shadow: var(--shadow-neon);
        z-index: 3000;
        max-width: 300px;
        animation: slideIn 0.3s ease;
    `;
    
    if (type === 'success') {
        notification.style.borderColor = '#22c55e';
    } else if (type === 'error') {
        notification.style.borderColor = '#ef4444';
    }
    
    document.body.appendChild(notification);
    
    // Auto remove after 3 seconds
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 3000);
}

// Add smooth scrolling for navigation links
function addSmoothScrolling() {
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
}

// Add navbar scroll effect
function addNavbarScrollEffect() {
    const navbar = document.querySelector('.navbar');
    
    window.addEventListener('scroll', () => {
        if (window.scrollY > 100) {
            navbar.style.background = 'rgba(30, 20, 40, 0.98)';
        } else {
            navbar.style.background = 'rgba(30, 20, 40, 0.95)';
        }
    });
}

// Add scroll animations
function addScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);
    
    // Observe elements for animation
    const animatedElements = document.querySelectorAll(`
        .feature-card, 
        .product-card, 
        .review-card, 
        .contact-card,
        .stat-card
    `);
    
    animatedElements.forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(30px)';
        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(el);
    });
}

// Add parallax effect
function addParallaxEffect() {
    window.addEventListener('scroll', () => {
        const scrolled = window.pageYOffset;
        const heroContent = document.querySelector('.hero-content');
        
        if (heroContent) {
            heroContent.style.transform = `translateY(${scrolled * 0.3}px)`;
        }
    });
}

// Add typing effect to hero title
function addTypingEffect() {
    const heroTitle = document.querySelector('.hero-title .gradient-text');
    if (!heroTitle) return;
    
    const originalText = heroTitle.textContent;
    heroTitle.textContent = '';
    
    let i = 0;
    const typeWriter = () => {
        if (i < originalText.length) {
            heroTitle.textContent += originalText.charAt(i);
            i++;
            setTimeout(typeWriter, 100);
        }
    };
    
    setTimeout(typeWriter, 1000);
}

// Add particle effect
function createParticles() {
    const hero = document.querySelector('.hero');
    const particleCount = 30;
    
    for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        particle.style.cssText = `
            position: absolute;
            width: 2px;
            height: 2px;
            background: rgba(139, 92, 246, 0.6);
            border-radius: 50%;
            pointer-events: none;
            animation: particleFloat ${Math.random() * 3 + 2}s ease-in-out infinite;
            left: ${Math.random() * 100}%;
            top: ${Math.random() * 100}%;
            animation-delay: ${Math.random() * 2}s;
        `;
        hero.appendChild(particle);
    }
}

// Add CSS animations for particles
const style = document.createElement('style');
style.textContent = `
    @keyframes slideIn {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    @keyframes particleFloat {
        0%, 100% {
            transform: translateY(0px) rotate(0deg);
            opacity: 1;
        }
        50% {
            transform: translateY(-20px) rotate(180deg);
            opacity: 0.5;
        }
    }
    
    .notification-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
    }
    
    .notification-content button {
        background: none;
        border: none;
        color: var(--foreground);
        font-size: 1.2rem;
        cursor: pointer;
        padding: 0;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: background-color 0.3s ease;
    }
    
    .notification-content button:hover {
        background: var(--muted);
    }
    
    .mobile-menu-btn.active .hamburger-line:nth-child(1) {
        transform: rotate(-45deg) translate(-5px, 6px);
    }
    
    .mobile-menu-btn.active .hamburger-line:nth-child(2) {
        opacity: 0;
    }
    
    .mobile-menu-btn.active .hamburger-line:nth-child(3) {
        transform: rotate(45deg) translate(-5px, -6px);
    }
`;

document.head.appendChild(style);

// Initialize particles after DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(createParticles, 2500);
});

// Add scroll to top functionality
function addScrollToTop() {
    const scrollBtn = document.createElement('button');
    scrollBtn.innerHTML = '<i class="fas fa-arrow-up"></i>';
    scrollBtn.className = 'scroll-to-top';
    scrollBtn.style.cssText = `
        position: fixed;
        bottom: 20px;
        left: 20px;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: var(--gradient-primary);
        border: none;
        color: var(--primary-foreground);
        font-size: 1.2rem;
        cursor: pointer;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        z-index: 1000;
        box-shadow: var(--shadow-neon);
    `;
    
    document.body.appendChild(scrollBtn);
    
    // Show/hide scroll button
    window.addEventListener('scroll', () => {
        if (window.pageYOffset > 300) {
            scrollBtn.style.opacity = '1';
            scrollBtn.style.visibility = 'visible';
        } else {
            scrollBtn.style.opacity = '0';
            scrollBtn.style.visibility = 'hidden';
        }
    });
    
    // Scroll to top functionality
    scrollBtn.addEventListener('click', () => {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });
    
    // Hover effect
    scrollBtn.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-3px) scale(1.1)';
        this.style.boxShadow = 'var(--shadow-neon-hover)';
    });
    
    scrollBtn.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(0) scale(1)';
        this.style.boxShadow = 'var(--shadow-neon)';
    });
}

// Initialize scroll to top button
document.addEventListener('DOMContentLoaded', addScrollToTop);

// Add keyboard navigation support
document.addEventListener('keydown', (e) => {
    // Close cart modal with Escape key
    if (e.key === 'Escape' && cartModal.classList.contains('active')) {
        toggleCart();
    }
    
    // Close mobile menu with Escape key
    if (e.key === 'Escape' && mobileMenu.classList.contains('active')) {
        closeMobileMenu();
    }
});

// Add click outside to close modals
document.addEventListener('click', (e) => {
    // Close cart modal when clicking outside
    if (cartModal.classList.contains('active') && e.target === cartModal) {
        toggleCart();
    }
});

// Add counter animation for stats
function animateCounters() {
    const counters = document.querySelectorAll('.stat-number');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const counter = entry.target;
                const target = parseInt(counter.textContent.replace('+', ''));
                let current = 0;
                const increment = target / 100;
                
                const updateCounter = () => {
                    if (current < target) {
                        current += increment;
                        counter.textContent = Math.floor(current) + '+';
                        requestAnimationFrame(updateCounter);
                    } else {
                        counter.textContent = target + '+';
                    }
                };
                
                updateCounter();
                observer.unobserve(counter);
            }
        });
    });
    
    counters.forEach(counter => observer.observe(counter));
}

// Initialize counter animation
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(animateCounters, 3000);
});

// Add search functionality (for future enhancement)
function addSearchFunctionality() {
    // This could be implemented to search through products
    // For now, it's just a placeholder for future enhancement
    console.log('Search functionality ready for implementation');
}

// Add wishlist functionality (for future enhancement)
function addToWishlist(productId) {
    // This could be implemented to save products to wishlist
    // For now, it's just a placeholder for future enhancement
    showNotification('ุชู ุฅุถุงูุฉ ุงูููุชุฌ ุฅูู ูุงุฆูุฉ ุงูุฃูููุงุช');
}

// Performance optimization: Lazy load images
function lazyLoadImages() {
    const images = document.querySelectorAll('img[data-src]');
    
    const imageObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const img = entry.target;
                img.src = img.dataset.src;
                img.removeAttribute('data-src');
                imageObserver.unobserve(img);
            }
        });
    });
    
    images.forEach(img => imageObserver.observe(img));
}

// Initialize lazy loading
document.addEventListener('DOMContentLoaded', lazyLoadImages);

// Add error handling for failed operations
window.addEventListener('error', (e) => {
    console.error('An error occurred:', e.error);
    // You could show a user-friendly error message here
});

// Add service worker for offline functionality (future enhancement)
if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
        // Service worker registration would go here
        console.log('Service worker support detected');
    });
}

// Dropdown functions
function toggleLanguageDropdown() {
    const dropdown = document.querySelector('.dropdown:has(#languageDropdown)');
    const currencyDropdown = document.querySelector('.dropdown:has(#currencyDropdown)');
    
    // Close currency dropdown if open
    currencyDropdown.classList.remove('active');
    
    dropdown.classList.toggle('active');
}

function toggleCurrencyDropdown() {
    const dropdown = document.querySelector('.dropdown:has(#currencyDropdown)');
    const languageDropdown = document.querySelector('.dropdown:has(#languageDropdown)');
    
    // Close language dropdown if open
    languageDropdown.classList.remove('active');
    
    dropdown.classList.toggle('active');
}

// Update dropdown displays
function updateDropdownDisplays() {
    const currentLangSpan = document.getElementById('currentLang');
    const currentCurrencySpan = document.getElementById('currentCurrency');
    
    if (currentLangSpan) {
        currentLangSpan.textContent = currentLanguage === 'ar' ? 'ุงูุนุฑุจูุฉ' : 'English';
    }
    
    if (currentCurrencySpan) {
        currentCurrencySpan.textContent = currencies[currentCurrency].symbol;
    }
}

// Close dropdowns when clicking outside
document.addEventListener('click', (e) => {
    if (!e.target.closest('.dropdown')) {
        document.querySelectorAll('.dropdown').forEach(dropdown => {
            dropdown.classList.remove('active');
        });
    }
});

// Enhanced change language function
function changeLanguage(lang) {
    currentLanguage = lang;
    localStorage.setItem('levelup-language', lang);
    updatePageLanguage();
    updateCartModal();
    updateDropdownDisplays();
    loadProducts();
    
    // Close dropdown
    document.querySelector('.dropdown:has(#languageDropdown)').classList.remove('active');
}

// Enhanced change currency function
function changeCurrency(currency) {
    currentCurrency = currency;
    localStorage.setItem('levelup-currency', currency);
    updateCartUI();
    updateCartModal();
    updateDropdownDisplays();
    loadProducts();
    
    // Close dropdown
    document.querySelector('.dropdown:has(#currencyDropdown)').classList.remove('active');
}

console.log('Level Up Store website loaded successfully! ๐');


// FAQ Toggle functionality
function toggleFAQ(faqNumber) {
    const answer = document.getElementById(`faq-answer-${faqNumber}`);
    const icon = document.getElementById(`faq-icon-${faqNumber}`);
    
    if (answer.style.display === 'block') {
        answer.style.display = 'none';
        icon.style.transform = 'rotate(0deg)';
    } else {
        // Close all other FAQs
        for (let i = 1; i <= 8; i++) {
            if (i !== faqNumber) {
                const otherAnswer = document.getElementById(`faq-answer-${i}`);
                const otherIcon = document.getElementById(`faq-icon-${i}`);
                if (otherAnswer) {
                    otherAnswer.style.display = 'none';
                    otherIcon.style.transform = 'rotate(0deg)';
                }
            }
        }
        
        // Open current FAQ
        answer.style.display = 'block';
        icon.style.transform = 'rotate(180deg)';
    }
}
